---
- name: download {{ url }}
  run_once: true
  get_url:
    url: "{{url}}"
    dest: "{{ download }}/{{ file }}"

- name: extract {{ download }}/{{ file }}
  become: yes
  become_method: sudo
  unarchive:
    src: "{{ download }}/{{ file }}"
    dest: "{{ usr_local }}"
    copy: no
    creates: "{{ zookeeper_home }}"

- name: set ownership on {{ zookeeper_home }}
  become: yes
  become_method: sudo
  file:
    path: "{{ zookeeper_home }}"
    owner: vagrant
    group: vagrant
    recurse: yes
    mode: 0755

- name: set PATH=$PATH:{{ zookeeper_home }}/bin
  become: yes
  become_method: sudo
  lineinfile:
    dest: "{{ etc_profiles }}/zookeeper.sh"
    create: yes
    state: present
    regexp: '^PATH'
    line: 'PATH=$PATH:{{ zookeeper_home }}/bin'

- name: copy zoo.cfg to {{ zookeeper_home }}/conf/zoo.cfg
  template:
    src: templates/zoo.cfg.j2
    dest: "{{ zookeeper_home }}/conf/zoo.cfg"
  register: zoo_config

- name: create {{ zookeeper_data_dir }}
  file:
    path: "{{ zookeeper_data_dir }}"
    state: directory

- name: create {{ zookeeper_log_dir }}
  file:
    path: "{{ zookeeper_log_dir }}"
    state: directory

- name: create myid in {{ zookeeper_data_dir }} for {{ groups.zookeeper.index(inventory_hostname) + 1 }}
  copy:
    content: "{{ groups.zookeeper.index(inventory_hostname) + 1 }}"
    dest: "{{ zookeeper_data_dir }}/myid"
    force: yes

- name: install zookeeper systemd unit file
  become: yes
  become_method: sudo
  template:
    src: templates/zookeeper.service.j2
    dest: "{{ system_units }}/zookeeper.service"
  register: zoo_service

- name: restart zookeeper
  become: yes
  become_method: sudo
  when: zoo_config.changed or zoo_service.changed
  systemd:
    enabled: yes
    state: restarted
    name: zookeeper
    daemon_reload: yes

- name: create softlink to zookeeper in homedir
  file:
    src: "{{zookeeper_home}}"
    dest: /home/vagrant/zookeeper
    state: link
